#include <TroykaDHT.h>
#include <LiquidCrystal.h>
#include <Servo.h>
Servo s1;
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);
DHT dht(7, DHT11);
int pin_foto = A0;
int pin_foto2 = A1;
int pin_foto3 = A2;
int pin_foto4 = A3;
int pin_foto5 = A4;

int svet = 8;
int svet2 = 9;
int svet3 = 10;
int svet4 = 13;
//svet c pin_foto2 зел север
//svet2 c pin_foto3 бел юг
//svet3 c pin_foto4 краст запад
//svet4 c pin_foto5 жёлт восток

int serv = 6;

void setup() {
pinMode(svet, OUTPUT);
pinMode(svet2, OUTPUT);
pinMode(svet3, OUTPUT);
pinMode(svet4, OUTPUT);

lcd.begin(20, 4);
s1.attach(serv);
Serial.begin(9600);
dht.begin();
}

void loop() {

 //вывод данных в монитор порта
dht.read();
int foto = analogRead(pin_foto);
Serial.print(foto);
Serial.print("   ");
int foto2 = analogRead(pin_foto2);
Serial.print(foto2);
Serial.print("   ");
int foto3 = analogRead(pin_foto3);
Serial.print(foto3);
Serial.print("   ");
int foto4 = analogRead(pin_foto4);
Serial.print(foto4);
Serial.print("   ");
int foto5 = analogRead(pin_foto5);
Serial.println(foto5);

// Мониторинг солнечной энергии и активности
lcd.clear();
lcd.print("Foto:");
lcd.print(foto);
lcd.print(",");
lcd.setCursor(10, 0);
lcd.print("sev:");
lcd.print(svet);
lcd.print(",");
lcd.print(foto2);
lcd.print(",");
lcd.setCursor(10, 1);
lcd.print("sout:");
lcd.print(svet2);
lcd.print(",");
lcd.print(foto3);
lcd.setCursor(10, 2);
lcd.print("3ap:");
lcd.print(svet3);
lcd.print(",");
lcd.print(foto4);
lcd.print(",");
lcd.setCursor(10, 3);
lcd.print("west:");
lcd.print(svet4);
lcd.print(",");
lcd.print(foto5);

//Автоматическое вычисление угла попадания солнечного света
int val = analogRead(A0);
map(val ,160 ,500 ,0 ,170);
s1.write(val);

//Определяет направление и движение солнца
if (svet == foto2 < 250){
  digitalWrite(svet, HIGH);
  }
else{
  digitalWrite(svet, LOW);
  }

if (svet2 == foto3 < 250){
  digitalWrite(svet2, HIGH);
  }
else{
  digitalWrite(svet2, LOW);
  }

if (svet3 = foto4 < 250){
  digitalWrite(svet3, HIGH);
  }
else{
  digitalWrite(svet3, LOW);
  }

if (svet4 = foto5 < 250){
  digitalWrite(svet4, HIGH);
  }
else{
  digitalWrite(svet4, LOW);
  }

//Измерения температуры солнца
  switch(dht.getState()) {
    case DHT_OK:
      Serial.print("Temperature = ");
      Serial.print(dht.getTemperatureC());
      Serial.println(" C \t");
    
     /* Serial.print("Humidity = ");
      Serial.print(dht.getHumidity());
      Serial.println(" %");*/
      break;
    case DHT_ERROR_CHECKSUM:
      Serial.println("Checksum error");
      break;
    case DHT_ERROR_TIMEOUT:
      Serial.println("Time out error");
      break;
    case DHT_ERROR_NO_REPLY:
      Serial.println("Sensor not connected");
      break;
  }
delay(2000);
}
